/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MyPackage;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Properties;
import java.util.Vector;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage; 
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
/**
 *
 * @author Mandranto
 */
public class Preter extends javax.swing.JFrame {
private static final String username = "root" ;
    private static final String password = "" ;
    private static final String dataConn = "jdbc:mysql://localhost:3306/banque" ;
    
    Connection sqlConn = null ;
    PreparedStatement pst = null ;
    PreparedStatement pst2 = null ;
    PreparedStatement pst3 = null ;
    ResultSet rs = null;
    ResultSet rs2 = null;
    int q, i, id, deleteItem;
    public Preter() {
        initComponents();
        Read();
        UpdatejComboBoxNumCompte();
        jButtonModifierPreter.setEnabled(false);
        //Recette();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
public void sendEmail(String toEmail, int jourRestant, double loanAmount, String nom, String prenom) {
    // Configuration des propriétés pour la connexion SMTP
    Properties props = new Properties();
    props.put("mail.transport.protocol", "smtp");
    props.put("mail.smtp.starttls.enable", "true");
    props.put("mail.smtp.auth", "true");
    props.put("mail.smtp.host", "smtp.gmail.com");
    props.put("mail.smtp.port", "587");
    props.put("mail.smtp.timeout", "1000");
    props.put("mail.smtp.ssl.protocols", "TLSv1.2");
    props.put("mail.smtp.debug", "true");
    props.put("mail.smtp.socketFactory.fallback", "false");

    // Création de la session avec l'authentification
    Session session = Session.getInstance(props, new javax.mail.Authenticator() {
        @Override
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication("mandrantofit@gmail.com", "tlivqubavdfusbiv");
        }
    });

    try {
        // Création du message
        MimeMessage message = new MimeMessage(session);
        message.setFrom(new InternetAddress("rakotomalalalionel32@gmail.com"));
        message.addRecipient(Message.RecipientType.TO, new InternetAddress(toEmail));
        message.setSubject("Rappel : Remboursement de votre prêt en cours");

        // Corps du message avec les informations spécifiques
        String messageBody = "Cher(e) "+nom+""+prenom+",\n\n";
        messageBody += "Il vous reste " + "14" + " jours pour rembourser votre dette de " + loanAmount + " euros.\n";
        messageBody += "Merci de prendre les mesures nécessaires pour régler votre prêt.\n\n";
        messageBody += "Cordialement,\n";
        messageBody += "Votre société de prêt";

        message.setText(messageBody);

        // Envoi du message
        Transport.send(message);

        System.out.println("E-mail envoyé avec succès");
    } catch (Exception e) {
        System.out.println(e);
    }
}

    public void Recette()
    {
    try {
        Class.forName("com.mysql.jdbc.Driver");
        sqlConn = DriverManager.getConnection(dataConn, username, password);
        pst = sqlConn.prepareStatement("Select SUM((montant_preté*0.1) As Tot from preter;");
           rs = pst.executeQuery();
           jLabelRT.setText(rs.getString("Tot"));
        }
catch (ClassNotFoundException | SQLException ex) {
        JOptionPane.showMessageDialog(null, ex);
    }
    
    }
public void Read() {
    try {
        Class.forName("com.mysql.jdbc.Driver");
        sqlConn = DriverManager.getConnection(dataConn, username, password);
        
        pst = sqlConn.prepareStatement("SELECT * FROM preter");
        pst2 = sqlConn.prepareStatement("SELECT SUM(montant_preté*0.1) AS total FROM preter");
        
        rs2 = pst2.executeQuery();
        if (rs2.next()) {
            String Somme = rs2.getString("total");
            jLabelRT.setText(Somme);
        }

        rs = pst.executeQuery();
        ResultSetMetaData rsMetaData = rs.getMetaData();

        int columnCount = rsMetaData.getColumnCount();
        DefaultTableModel recordTable = (DefaultTableModel) jTablePreter.getModel();
        recordTable.setRowCount(0);

        while (rs.next()) {
            Vector<Object> rowData = new Vector<>();

            for (int i = 1; i <= columnCount; i++) {
                rowData.add(rs.getObject(i));
            }

            recordTable.addRow(rowData);
        }
    } catch (ClassNotFoundException | SQLException ex) {
        JOptionPane.showMessageDialog(null, ex);
    }
}


   
    private void UpdatejComboBoxNumCompte() {
    String request = "SELECT * FROM client";
    try {
        pst = sqlConn.prepareStatement(request);
        rs = pst.executeQuery();
        
        jComboBoxNumCompte.removeAllItems(); // Supprime tous les éléments précédents
        while(rs.next()) {
            jComboBoxNumCompte.addItem(rs.getString("numCompte")); // Ajoute les nouveaux éléments
        }
    } catch(SQLException e) {}
}
   /* private void sendEmail(String emailAddress, int joursRestants, int montantARendre) {
    // Configuration des propriétés pour la session de courrier
    Properties properties = new Properties();
    properties.put("mail.smtp.host", "smtp.example.com"); // Remplacez "smtp.example.com" par le serveur SMTP approprié
    properties.put("mail.smtp.port", "587"); // Remplacez par le port SMTP approprié
    properties.put("mail.smtp.auth", "true"); // Active l'authentification SMTP
    properties.put("mail.smtp.starttls.enable", "true"); // Active le chiffrement TLS
    
    // Création de la session de courrier
    Session session = Session.getInstance(properties, new Authenticator() {
        @Override
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication("mandrantofit@gmail.com", "tlivqubavdfusbiv"); // Remplacez par votre adresse e-mail et votre mot de passe
        }
    });

    try {
        // Création du message e-mail
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress("mandrantofit@gmail.com")); // Remplacez par votre adresse e-mail
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(emailAddress));
        message.setSubject("Notification de prêt");
        message.setText("Cher client,\n\nIl vous reste " + joursRestants + " jours pour rendre le montant de " + montantARendre + " euros.\n\nCordialement,\nVotre banque");

        // Envoi du message
        Transport.send(message);

        System.out.println("E-mail envoyé avec succès !");
    } catch (MessagingException e) {
        e.printStackTrace();
    }
}*/

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabelNuméroDuPret = new javax.swing.JLabel();
        jLabelNuméroDeComptePret = new javax.swing.JLabel();
        jLabelMontantDemand = new javax.swing.JLabel();
        jTextMontantDemander = new javax.swing.JTextField();
        jLabelDateDuPret = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePreter = new javax.swing.JTable();
        jButtonAjouterPreter = new javax.swing.JButton();
        jButtonModifierPreter = new javax.swing.JButton();
        jButtonSupprimerPreter = new javax.swing.JButton();
        jComboBoxNumCompte = new javax.swing.JComboBox<>();
        jTextNumPret = new javax.swing.JTextField();
        jRadioAPart = new javax.swing.JRadioButton();
        jRadioPayé = new javax.swing.JRadioButton();
        jLabelSituation = new javax.swing.JLabel();
        jRadioTout = new javax.swing.JRadioButton();
        jLabelRT1 = new javax.swing.JLabel();
        jTextDateDuPret = new javax.swing.JTextField();
        jLabelRT = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelNuméroDuPret.setText("Numéro du Pret");

        jLabelNuméroDeComptePret.setText("Numéro du Compte ");

        jLabelMontantDemand.setText("Montant Demandé");

        jTextMontantDemander.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextMontantDemanderDemanderActionPerformed(evt);
            }
        });

        jLabelDateDuPret.setText("Date du pret");

        jTablePreter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Numéro du Pret", "Numéro du Compte", "Montant Prété", "rest_payé", "Date de pret"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePreter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePreterMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePreter);

        jButtonAjouterPreter.setText("Effectuer Pret");
        jButtonAjouterPreter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterPreterActionPerformed(evt);
            }
        });

        jButtonModifierPreter.setText("Modifier");
        jButtonModifierPreter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierPreterActionPerformed(evt);
            }
        });

        jButtonSupprimerPreter.setText("Supprimer");
        jButtonSupprimerPreter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerPreterActionPerformed(evt);
            }
        });

        jTextNumPret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNumPretActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioAPart);
        jRadioAPart.setText("à part");
        jRadioAPart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioAPartActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioPayé);
        jRadioPayé.setText("Payé");
        jRadioPayé.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioPayéActionPerformed(evt);
            }
        });

        jLabelSituation.setText("Liste");

        buttonGroup1.add(jRadioTout);
        jRadioTout.setText("Tout");
        jRadioTout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioToutActionPerformed(evt);
            }
        });

        jLabelRT1.setText("Recette Total:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMontantDemand, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNuméroDeComptePret, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNuméroDuPret, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelDateDuPret, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextDateDuPret)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextMontantDemander)
                                .addComponent(jComboBoxNumCompte, 0, 202, Short.MAX_VALUE)
                                .addComponent(jTextNumPret, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonAjouterPreter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonModifierPreter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonSupprimerPreter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelSituation, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jRadioPayé, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioAPart, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioTout, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabelRT1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRT, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNuméroDuPret, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextNumPret, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAjouterPreter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelNuméroDeComptePret, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonModifierPreter))
                    .addComponent(jComboBoxNumCompte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMontantDemand, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMontantDemander, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSupprimerPreter))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDateDuPret, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jTextDateDuPret, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSituation, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioPayé)
                    .addComponent(jRadioAPart)
                    .addComponent(jRadioTout))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRT1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRT, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextMontantDemanderDemanderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMontantDemanderDemanderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextMontantDemanderDemanderActionPerformed

    private void jButtonAjouterPreterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterPreterActionPerformed
        try {
    Class.forName("com.mysql.jdbc.Driver");
    sqlConn = DriverManager.getConnection(dataConn, username, password);
    sqlConn.setAutoCommit(false); // Start a transaction
    
    // Prepare the statements
    pst = sqlConn.prepareStatement("INSERT INTO preter (num_pret, num_compte, montant_preté, rest_payé , datepret) VALUES (?, ?, ? ,? , ?)");
   // pst2 = sqlConn.prepareStatement("UPDATE client SET Solde = Solde - ? WHERE numCompte = ?");
    pst3 = sqlConn.prepareStatement("UPDATE client SET Solde = Solde + ? WHERE numCompte = ?");
    
    // Get selected item from jComboBoxEnvoyeur
    //String selectedEnvoyeur = jComboBoxNumCompte.getSelectedItem().toString();
    
    // Set parameters for pst2 and pst3
    //pst2.setInt(1, Integer.parseInt(jTextMontantDemander.getText()));
    //pst2.setString(2, selectedEnvoyeur);
    pst3.setInt(1, Integer.parseInt(jTextMontantDemander.getText()));
    pst3.setString(2, jComboBoxNumCompte.getSelectedItem().toString());
    
    // Set parameters for pst
    pst.setString(1, jTextNumPret.getText());
    pst.setString(2, jComboBoxNumCompte.getSelectedItem().toString());
    pst.setString(3, jTextMontantDemander.getText());
    pst.setString(4, jTextMontantDemander.getText());
    pst.setString(5, jTextDateDuPret.getText());
    
    // Execute the statements
    pst.executeUpdate();
    //pst2.executeUpdate();
    pst3.executeUpdate();
    
    sqlConn.commit(); // Commit the transaction
    sqlConn.setAutoCommit(false); // Fin de la transaction
    JOptionPane.showMessageDialog(this, "Record Added");
    
    // Clear input fields
    jTextNumPret.setText("");
    jTextMontantDemander.setText("");
    jTextDateDuPret.setText("");
    
    Read();
    UpdatejComboBoxNumCompte();
    
    /*rs = (ResultSet) pst.getGeneratedKeys();
    if (rs.next()) {
        int generatedId = rs.getInt(1);
        String infoMail = "SELECT c.Nom As nom,c.Prénoms AS prenom, c.mail AS mail, p.montant_preté AS montant_pret FROM client c JOIN pret p ON c.num_compte = p.num_compte WHERE p.num_pret = ?";
        Class.forName("com.mysql.cj.jdbc.Driver");
    sqlConn = DriverManager.getConnection(dataConn, username, password);
         pst = (PreparedStatement) sqlConn.prepareStatement(infoMail);
        pst.setInt(1, generatedId);

        ResultSet inMail = (ResultSet) pst.executeQuery();
        if (inMail.next()) {
            String mail = inMail.getString("mail");
            String nom = inMail.getString("nom");
            String prenom = inMail.getString("prenom");
            double montant = inMail.getInt("montant_pret");
            int nbjrs = 10;
            sendEmail(mail, nbjrs, montant, nom, prenom);
        }
    }*/

    /*//email()
        //String emailAddress = getEmailAddressFromDatabase(jComboBoxNumCompte.getSelectedItem().toString()); // Remplacez par votre méthode pour récupérer l'adresse e-mail du client en fonction du numéro de compte
        String emailAddress = "mandrantofit@gmail.com";
        int joursRestants = 7; // Remplacez par le nombre de jours restants réel
//int montantARendre = Integer.parseInt(jTextMontantDemander.getText()) - Integer.parseInt(jTextMontantDemander.getText()); // Remplacez par le calcul réel du montant à rendre
        int montantARendre = 20000;
sendEmail(emailAddress, joursRestants, montantARendre);//email()*/

        }catch (ClassNotFoundException | SQLException ex) {
    // Rollback the transaction in case of any error
    if (sqlConn != null) {
        try {
            sqlConn.rollback();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    java.util.logging.Logger.getLogger(Virement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
} finally {
    // Enable auto-commit and close the connection
    if (sqlConn != null) {
        try {
            sqlConn.setAutoCommit(true);
            sqlConn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
    }//GEN-LAST:event_jButtonAjouterPreterActionPerformed

    private void jTextNumPretActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNumPretActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNumPretActionPerformed

    private void jRadioAPartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioAPartActionPerformed
         try {
        Class.forName("com.mysql.jdbc.Driver");
        sqlConn = DriverManager.getConnection(dataConn, username, password);
        pst = sqlConn.prepareStatement("SELECT * FROM preter WHERE rest_payé != 0");

        rs = pst.executeQuery();
        ResultSetMetaData rsMetaData = rs.getMetaData();

        int columnCount = rsMetaData.getColumnCount();
        DefaultTableModel recordTable = (DefaultTableModel) jTablePreter.getModel();
        recordTable.setRowCount(0);

        while (rs.next()) {
            Vector<Object> rowData = new Vector<>();

            for (int i = 1; i <= columnCount; i++) {
                rowData.add(rs.getObject(i));
            }

            recordTable.addRow(rowData);
        }
    } catch (ClassNotFoundException | SQLException ex) {
        JOptionPane.showMessageDialog(null, ex);
    }
    }//GEN-LAST:event_jRadioAPartActionPerformed

    private void jRadioPayéActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioPayéActionPerformed
        try {
        Class.forName("com.mysql.jdbc.Driver");
        sqlConn = DriverManager.getConnection(dataConn, username, password);
        pst = sqlConn.prepareStatement("SELECT * FROM preter WHERE rest_payé = 0");

        rs = pst.executeQuery();
        ResultSetMetaData rsMetaData = rs.getMetaData();

        int columnCount = rsMetaData.getColumnCount();
        DefaultTableModel recordTable = (DefaultTableModel) jTablePreter.getModel();
        recordTable.setRowCount(0);

        while (rs.next()) {
            Vector<Object> rowData = new Vector<>();

            for (int i = 1; i <= columnCount; i++) {
                rowData.add(rs.getObject(i));
            }

            recordTable.addRow(rowData);
        }
    } catch (ClassNotFoundException | SQLException ex) {
        JOptionPane.showMessageDialog(null, ex);
    }
    }//GEN-LAST:event_jRadioPayéActionPerformed

    private void jButtonSupprimerPreterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerPreterActionPerformed
        try
        {
            //id  = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());//tsy ilaina
            deleteItem = JOptionPane.showConfirmDialog(null, "Confirm if you wanna delete","warning",JOptionPane.YES_NO_OPTION);
            if(deleteItem == JOptionPane.YES_OPTION)
            {
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst = sqlConn.prepareStatement("DELETE FROM preter WHERE num_pret = ? ");
              
              pst.setString(1, jTextNumPret.getText());
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Deleted");
                Read();
                jTextNumPret.setText("");
                jTextMontantDemander.setText("");
                jTextDateDuPret.setText("");
            }
        }
        catch(ClassNotFoundException ex)
         {
             java.util.logging.Logger.getLogger(Preter.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
         }
         catch(SQLException ex)
         {
            System.err.println(ex);
         }
    }//GEN-LAST:event_jButtonSupprimerPreterActionPerformed

    private void jButtonModifierPreterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierPreterActionPerformed
         try
            {
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);
                pst = sqlConn.prepareStatement("UPDATE preter SET num_pret=? ,num_compte=? ,montant_preté=? ,datepret=?  WHERE num_pret=? ");
                              
                pst.setString(1, jTextNumPret.getText());
                pst.setString(2, jComboBoxNumCompte.getSelectedItem().toString());
                pst.setString(3, jTextMontantDemander.getText());
                pst.setString(4, jTextDateDuPret.getText());
                
                pst.setString(5, jTextNumPret.getText());

                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Updated");
                jTextMontantDemander.setText("");
                jTextDateDuPret.setText("");
                jTextNumPret.setText("");
                Read();
                
            }
        catch(ClassNotFoundException | SQLException ex)
         {
             java.util.logging.Logger.getLogger(Preter.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
         }
    }//GEN-LAST:event_jButtonModifierPreterActionPerformed

    private void jTablePreterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePreterMouseClicked
        DefaultTableModel recordTable = (DefaultTableModel) jTablePreter.getModel();
int selectedRow = jTablePreter.getSelectedRow();
jTextNumPret.setText(recordTable.getValueAt(selectedRow, 0).toString());
jComboBoxNumCompte.setSelectedItem(recordTable.getValueAt(selectedRow, 1).toString());
jTextMontantDemander.setText(recordTable.getValueAt(selectedRow, 2).toString());
//jTextDateDuPret.setText(recordTable.getValueAt(selectedRow, 3).toString());
    }//GEN-LAST:event_jTablePreterMouseClicked

    private void jRadioToutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioToutActionPerformed
        Read();
    }//GEN-LAST:event_jRadioToutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Preter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Preter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Preter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Preter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Preter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButtonAjouterPreter;
    private javax.swing.JButton jButtonModifierPreter;
    private javax.swing.JButton jButtonSupprimerPreter;
    private javax.swing.JComboBox<String> jComboBoxNumCompte;
    private javax.swing.JLabel jLabelDateDuPret;
    private javax.swing.JLabel jLabelMontantDemand;
    private javax.swing.JLabel jLabelNuméroDeComptePret;
    private javax.swing.JLabel jLabelNuméroDuPret;
    private javax.swing.JLabel jLabelRT;
    private javax.swing.JLabel jLabelRT1;
    private javax.swing.JLabel jLabelSituation;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioAPart;
    private javax.swing.JRadioButton jRadioPayé;
    private javax.swing.JRadioButton jRadioTout;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePreter;
    private javax.swing.JTextField jTextDateDuPret;
    private javax.swing.JTextField jTextMontantDemander;
    private javax.swing.JTextField jTextNumPret;
    // End of variables declaration//GEN-END:variables

    private String getEmailAddressFromDatabase(String toString) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
